import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import axios from "axios";

const ProductDetailPage = () => {
    const { id } = useParams();
    const [product, setProduct] = useState(null);
    const [reviews, setReviews] = useState([]);
    const [rating, setRating] = useState(5);
    const [content, setContent] = useState("");
    const [currentUser, setCurrentUser] = useState("");
    const [editReviewId, setEditReviewId] = useState(null);
    const [editContent, setEditContent] = useState("");
    const [editRating, setEditRating] = useState(5);

    const fetchReviews = async () => {
        try {
            const res = await axios.get(`http://localhost:8080/api/reviews/product/${id}`);
            setReviews(res.data);
        } catch (err) {
            console.error("Î¶¨Î∑∞ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®:", err);
        }
    };

    const fetchCurrentUser = async () => {
        const token = localStorage.getItem("jwt");
        try {
            const res = await axios.get("http://localhost:8080/api/user/me", {
                headers: { Authorization: `Bearer ${token}` },
            });
            setCurrentUser(res.data.username);
        } catch (err) {
            console.error("Ïú†Ï†Ä Ï†ïÎ≥¥ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®:", err);
        }
    };

    useEffect(() => {
        const token = localStorage.getItem("jwt");
        if (!token) {
            alert("Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§.");
            window.location.href = "/login";
            return;
        }

        axios
            .get(`http://localhost:8080/api/products/${id}`, {
                headers: { Authorization: `Bearer ${token}` },
            })
            .then((res) => setProduct(res.data))
            .catch((err) => {
                console.error("ÏÉÅÌíà ÏÉÅÏÑ∏ Ïò§Î•ò:", err);
                alert("ÏÉÅÌíà Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.");
            });

        fetchReviews();
        fetchCurrentUser();
    }, [id]);

    const handleAddToCart = async () => {
        const token = localStorage.getItem("jwt");
        try {
            await axios.post(
                "http://localhost:8080/api/cart/add",
                {
                    productId: product.productId,
                    quantity: 1,
                },
                {
                    headers: {
                        Authorization: `Bearer ${token}`,
                    },
                }
            );
            alert("Ïû•Î∞îÍµ¨ÎãàÏóê Îã¥ÏïòÏäµÎãàÎã§!");
        } catch (err) {
            console.error("Ïû•Î∞îÍµ¨Îãà Îã¥Í∏∞ Ïã§Ìå®:", err);
            alert("Ïû•Î∞îÍµ¨Îãà Îã¥Í∏∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.");
        }
    };

    const handleReviewSubmit = async () => {
        const token = localStorage.getItem("jwt");
        try {
            await axios.post(
                "http://localhost:8080/api/reviews",
                {
                    productId: id,
                    rating,
                    content,
                },
                {
                    headers: { Authorization: `Bearer ${token}` },
                }
            );
            alert("Î¶¨Î∑∞Í∞Ä ÏûëÏÑ±ÎêòÏóàÏäµÎãàÎã§!");
            setRating(5);
            setContent("");
            fetchReviews();
        } catch (err) {
            console.error("Î¶¨Î∑∞ ÏûëÏÑ± Ïã§Ìå®:", err);
            alert(err.response?.data || "Î¶¨Î∑∞ ÏûëÏÑ± Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
        }
    };

    const handleDeleteReview = async (reviewId) => {
        const token = localStorage.getItem("jwt");
        if (!window.confirm("Î¶¨Î∑∞Î•º ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?")) return;

        try {
            await axios.delete(`http://localhost:8080/api/reviews/${reviewId}`, {
                headers: { Authorization: `Bearer ${token}` },
            });
            alert("Î¶¨Î∑∞Í∞Ä ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.");
            fetchReviews();
        } catch (err) {
            console.error("Î¶¨Î∑∞ ÏÇ≠Ï†ú Ïã§Ìå®:", err);
            alert("Î¶¨Î∑∞ ÏÇ≠Ï†úÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.");
        }
    };

    const handleEditReview = (review) => {
        setEditReviewId(review.reviewId);
        setEditContent(review.content);
        setEditRating(review.rating);
    };

    const handleUpdateReview = async () => {
        const token = localStorage.getItem("jwt");
        try {
            await axios.put(
                `http://localhost:8080/api/reviews/${editReviewId}`,
                {
                    rating: editRating,
                    content: editContent,
                },
                {
                    headers: { Authorization: `Bearer ${token}` },
                }
            );
            alert("Î¶¨Î∑∞Í∞Ä ÏàòÏ†ïÎêòÏóàÏäµÎãàÎã§.");
            setEditReviewId(null);
            setEditContent("");
            setEditRating(5);
            fetchReviews();
        } catch (err) {
            console.error("Î¶¨Î∑∞ ÏàòÏ†ï Ïã§Ìå®:", err);
            alert("Î¶¨Î∑∞ ÏàòÏ†ïÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.");
        }
    };

    const handleCancelEdit = () => {
        setEditReviewId(null);
        setEditContent("");
        setEditRating(5);
    };

    const averageRating =
        reviews.length > 0
            ? (
                reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length
            ).toFixed(1)
            : null;

    if (!product) return <div>Î∂àÎü¨Ïò§Îäî Ï§ë...</div>;

    return (
        <div style={{ padding: "20px" }}>
            <h2>{product.name}</h2>
            <p>{product.description}</p>
            <p>Í∞ÄÍ≤©: {product.price.toLocaleString()}Ïõê</p>
            <p>Ïû¨Í≥†: {product.stock}Í∞ú</p>
            <button onClick={handleAddToCart}>Ïû•Î∞îÍµ¨Îãà Îã¥Í∏∞</button>

            <hr />
            <h3>üìù Î¶¨Î∑∞</h3>

            {averageRating && (
                <div style={{ marginBottom: "10px", fontWeight: "bold" }}>
                    ‚≠ê ÌèâÍ∑† Î≥ÑÏ†ê: {averageRating}Ï†ê ({reviews.length}Í∞ú Î¶¨Î∑∞)
                </div>
            )}

            <div style={{ marginBottom: "20px" }}>
                <label>
                    ÌèâÏ†ê:
                    <select value={rating} onChange={(e) => setRating(parseInt(e.target.value))}>
                        {[5, 4, 3, 2, 1].map((r) => (
                            <option key={r} value={r}>
                                {r}Ï†ê
                            </option>
                        ))}
                    </select>
                </label>
                <br />
                <textarea
                    placeholder="Î¶¨Î∑∞ ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                    value={content}
                    onChange={(e) => setContent(e.target.value)}
                    rows={3}
                    style={{ width: "100%", marginTop: "8px" }}
                />
                <button onClick={handleReviewSubmit} style={{ marginTop: "8px" }}>
                    Î¶¨Î∑∞ Îì±Î°ù
                </button>
            </div>

            {reviews.length === 0 ? (
                <p>ÏïÑÏßÅ ÏûëÏÑ±Îêú Î¶¨Î∑∞Í∞Ä ÏóÜÏäµÎãàÎã§.</p>
            ) : (
                <ul>
                    {reviews.map((review, index) => (
                        <li
                            key={index}
                            style={{
                                borderBottom: "1px solid #ccc",
                                marginBottom: "10px",
                                paddingBottom: "10px",
                            }}
                        >
                            <strong>{review.username}</strong> ‚≠ê {review.rating}Ï†ê
                            <p>{review.content}</p>
                            <small>
                                ÏûëÏÑ±Ïùº: {new Date(review.createdAt).toLocaleString()}
                            </small>
                            {review.username === currentUser && (
                                <div style={{ marginTop: "5px" }}>
                                    <button
                                        onClick={() => handleDeleteReview(review.reviewId)}
                                        style={{ color: "red", marginRight: "10px" }}
                                    >
                                        ÏÇ≠Ï†ú
                                    </button>
                                    <button
                                        onClick={() => handleEditReview(review)}
                                        style={{ color: "blue" }}
                                    >
                                        ÏàòÏ†ï
                                    </button>
                                </div>
                            )}
                            {editReviewId === review.reviewId && (
                                <div style={{ marginTop: "10px" }}>
                                    <label>
                                        ÌèâÏ†ê:
                                        <select
                                            value={editRating}
                                            onChange={(e) => setEditRating(parseInt(e.target.value))}
                                        >
                                            {[5, 4, 3, 2, 1].map((r) => (
                                                <option key={r} value={r}>
                                                    {r}Ï†ê
                                                </option>
                                            ))}
                                        </select>
                                    </label>
                                    <br />
                                    <textarea
                                        value={editContent}
                                        onChange={(e) => setEditContent(e.target.value)}
                                        rows={3}
                                        style={{ width: "100%", marginTop: "8px" }}
                                    />
                                    <button onClick={handleUpdateReview} style={{ marginTop: "8px", marginRight: "8px" }}>
                                        Ï†ÄÏû•
                                    </button>
                                    <button onClick={handleCancelEdit} style={{ marginTop: "8px" }}>
                                        Ï∑®ÏÜå
                                    </button>
                                </div>
                            )}
                        </li>
                    ))}
                </ul>
            )}
        </div>
    );
};

export default ProductDetailPage;
